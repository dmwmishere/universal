package com.smartbear;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This sample web service is used to demonstrate how to test web services with SmartBear's TestComplete.
 *
 * This class was generated by Apache CXF 3.1.3
 * 2017-04-04T21:51:34.425+03:00
 * Generated source version: 3.1.3
 * 
 */
@WebServiceClient(name = "SampleWebService", 
                  wsdlLocation = "http://secure.smartbearsoftware.com/samples/testcomplete10/webservices/Service.asmx?WSDL",
                  targetNamespace = "http://smartbear.com") 
public class SampleWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://smartbear.com", "SampleWebService");
    public final static QName SampleWebServiceSoap = new QName("http://smartbear.com", "SampleWebServiceSoap");
    public final static QName SampleWebServiceSoap12 = new QName("http://smartbear.com", "SampleWebServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://secure.smartbearsoftware.com/samples/testcomplete10/webservices/Service.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SampleWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://secure.smartbearsoftware.com/samples/testcomplete10/webservices/Service.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public SampleWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SampleWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SampleWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public SampleWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SampleWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SampleWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns SampleWebServiceSoap
     */
    @WebEndpoint(name = "SampleWebServiceSoap")
    public SampleWebServiceSoap getSampleWebServiceSoap() {
        return super.getPort(SampleWebServiceSoap, SampleWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SampleWebServiceSoap
     */
    @WebEndpoint(name = "SampleWebServiceSoap")
    public SampleWebServiceSoap getSampleWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(SampleWebServiceSoap, SampleWebServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns SampleWebServiceSoap
     */
    @WebEndpoint(name = "SampleWebServiceSoap12")
    public SampleWebServiceSoap getSampleWebServiceSoap12() {
        return super.getPort(SampleWebServiceSoap12, SampleWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SampleWebServiceSoap
     */
    @WebEndpoint(name = "SampleWebServiceSoap12")
    public SampleWebServiceSoap getSampleWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(SampleWebServiceSoap12, SampleWebServiceSoap.class, features);
    }

}
